// <auto-generated />
using LinkSharingRepository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LinkSharingRepository.Migrations
{
    [DbContext(typeof(SQLiteContext))]
    [Migration("20240510061946_userphotoandformat")]
    partial class userphotoandformat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("LinkSharingRepository.Models.CustomLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.HasIndex("UserId");

                    b.ToTable("CustomLinks");
                });

            modelBuilder.Entity("LinkSharingRepository.Models.Platform", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BrandingColor")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandingColor = "#f48024",
                            Icon = "icon-stack-overflow.svg",
                            Name = "Stack Overflow"
                        },
                        new
                        {
                            Id = 2,
                            BrandingColor = "#FF0000",
                            Icon = "icon-youtube.svg",
                            Name = "You Tube"
                        },
                        new
                        {
                            Id = 3,
                            BrandingColor = "#333",
                            Icon = "icon-gitlab.svg",
                            Name = "GitHub"
                        },
                        new
                        {
                            Id = 4,
                            BrandingColor = "#4267B2",
                            Icon = "icon-facebook.svg",
                            Name = "Facebook"
                        },
                        new
                        {
                            Id = 5,
                            BrandingColor = "#1DA1F2",
                            Icon = "icon-twitter.svg",
                            Name = "Twitter"
                        },
                        new
                        {
                            Id = 7,
                            BrandingColor = "#9146ff",
                            Icon = "icon-twitch.svg",
                            Name = "Twitch"
                        },
                        new
                        {
                            Id = 8,
                            BrandingColor = "#0a66c2",
                            Icon = "icon-LinkedIn.svg",
                            Name = "LinkedIn"
                        });
                });

            modelBuilder.Entity("LinkSharingRepository.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhotoFormat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LinkSharingRepository.Models.CustomLink", b =>
                {
                    b.HasOne("LinkSharingRepository.Models.Platform", "Platform")
                        .WithMany()
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LinkSharingRepository.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
